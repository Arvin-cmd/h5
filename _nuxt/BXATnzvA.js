const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./B7fVrTXE.js","./DHulAg21.js","./CjEckXE1.js","./entry.9iLJWGz1.css","./v_CbXKuj.js","./E_LcHiGL.js","./C8jAu71Y.js","./atMqHg7I.js","./9SyEGC0j.js","./D7itJ-sI.js","./CCQ-jUte.js","./Ciblamey.js"])))=>i.map(i=>d[i]);
import{V as L,W as y,X as I,Y as C,Z as A,$ as b,a0 as D,a1 as _,a2 as x}from"./CjEckXE1.js";import{a3 as T}from"./CjEckXE1.js";S.type="coinbaseWallet";function S(a={}){return a.version==="3"||a.headlessMode?W(a):N(a)}function N(a){let v,l,d,r;return L(o=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:S.type,async connect({chainId:n,...i}={}){try{const t=await this.getProvider(),e=(await t.request({method:"eth_requestAccounts",params:"instantOnboarding"in i&&i.instantOnboarding?[{onboarding:"instant"}]:[]})).map(s=>y(s));l||(l=this.onAccountsChanged.bind(this),t.on("accountsChanged",l)),d||(d=this.onChainChanged.bind(this),t.on("chainChanged",d)),r||(r=this.onDisconnect.bind(this),t.on("disconnect",r));let c=await this.getChainId();if(n&&c!==n){const s=await this.switchChain({chainId:n}).catch(u=>{if(u.code===b.code)throw u;return{id:c}});c=(s==null?void 0:s.id)??c}return{accounts:e,chainId:c}}catch(t){throw/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(t.message)?new b(t):t}},async disconnect(){var i;const n=await this.getProvider();l&&(n.removeListener("accountsChanged",l),l=void 0),d&&(n.removeListener("chainChanged",d),d=void 0),r&&(n.removeListener("disconnect",r),r=void 0),n.disconnect(),(i=n.close)==null||i.call(n)},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(i=>y(i))},async getChainId(){const i=await(await this.getProvider()).request({method:"eth_chainId"});return Number(i)},async getProvider(){if(!v){const n=(()=>{var e;return typeof a.preference=="string"?{options:a.preference}:{...a.preference,options:((e=a.preference)==null?void 0:e.options)??"all"}})(),{createCoinbaseWalletSDK:i}=await D(async()=>{const{createCoinbaseWalletSDK:e}=await import("./B7fVrTXE.js");return{createCoinbaseWalletSDK:e}},__vite__mapDeps([0,1,2,3,4,5,6,7]),import.meta.url);v=i({...a,appChainIds:o.chains.map(e=>e.id),preference:n}).getProvider()}return v},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:n,chainId:i}){var c,s,u,w;const t=o.chains.find(f=>f.id===i);if(!t)throw new I(new C);const e=await this.getProvider();try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:A(t.id)}]}),t}catch(f){if(f.code===4902)try{let h;n!=null&&n.blockExplorerUrls?h=n.blockExplorerUrls:h=(c=t.blockExplorers)!=null&&c.default.url?[(s=t.blockExplorers)==null?void 0:s.default.url]:[];let p;(u=n==null?void 0:n.rpcUrls)!=null&&u.length?p=n.rpcUrls:p=[((w=t.rpcUrls.default)==null?void 0:w.http[0])??""];const g={blockExplorerUrls:h,chainId:A(i),chainName:(n==null?void 0:n.chainName)??t.name,iconUrls:n==null?void 0:n.iconUrls,nativeCurrency:(n==null?void 0:n.nativeCurrency)??t.nativeCurrency,rpcUrls:p};return await e.request({method:"wallet_addEthereumChain",params:[g]}),t}catch(h){throw new b(h)}throw new I(f)}},onAccountsChanged(n){n.length===0?this.onDisconnect():o.emitter.emit("change",{accounts:n.map(i=>y(i))})},onChainChanged(n){const i=Number(n);o.emitter.emit("change",{chainId:i})},async onDisconnect(n){o.emitter.emit("disconnect");const i=await this.getProvider();l&&(i.removeListener("accountsChanged",l),l=void 0),d&&(i.removeListener("chainChanged",d),d=void 0),r&&(i.removeListener("disconnect",r),r=void 0)}}))}function W(a){let l,d,r,o,n;return L(i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:S.type,async connect({chainId:t}={}){try{const e=await this.getProvider(),c=(await e.request({method:"eth_requestAccounts"})).map(u=>y(u));r||(r=this.onAccountsChanged.bind(this),e.on("accountsChanged",r)),o||(o=this.onChainChanged.bind(this),e.on("chainChanged",o)),n||(n=this.onDisconnect.bind(this),e.on("disconnect",n));let s=await this.getChainId();if(t&&s!==t){const u=await this.switchChain({chainId:t}).catch(w=>{if(w.code===b.code)throw w;return{id:s}});s=(u==null?void 0:u.id)??s}return{accounts:c,chainId:s}}catch(e){throw/(user closed modal|accounts received is empty|user denied account)/i.test(e.message)?new b(e):e}},async disconnect(){const t=await this.getProvider();r&&(t.removeListener("accountsChanged",r),r=void 0),o&&(t.removeListener("chainChanged",o),o=void 0),n&&(t.removeListener("disconnect",n),n=void 0),t.disconnect(),t.close()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(e=>y(e))},async getChainId(){const e=await(await this.getProvider()).request({method:"eth_chainId"});return Number(e)},async getProvider(){var t;if(!d){const e=await(async()=>{const{default:f}=await D(async()=>{const{default:h}=await import("./9SyEGC0j.js").then(p=>p.i);return{default:h}},__vite__mapDeps([8,2,3,1]),import.meta.url);return typeof f!="function"&&typeof f.default=="function"?f.default:f})();l=new e({...a,reloadOnDisconnect:!1});const c=(t=l.walletExtension)==null?void 0:t.getChainId(),s=i.chains.find(f=>a.chainId?f.id===a.chainId:f.id===c)||i.chains[0],u=a.chainId||(s==null?void 0:s.id),w=a.jsonRpcUrl||(s==null?void 0:s.rpcUrls.default.http[0]);d=l.makeWeb3Provider(w,u)}return d},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:t,chainId:e}){var u,w,f,h;const c=i.chains.find(p=>p.id===e);if(!c)throw new I(new C);const s=await this.getProvider();try{return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:A(c.id)}]}),c}catch(p){if(p.code===4902)try{let g;t!=null&&t.blockExplorerUrls?g=t.blockExplorerUrls:g=(u=c.blockExplorers)!=null&&u.default.url?[(w=c.blockExplorers)==null?void 0:w.default.url]:[];let U;(f=t==null?void 0:t.rpcUrls)!=null&&f.length?U=t.rpcUrls:U=[((h=c.rpcUrls.default)==null?void 0:h.http[0])??""];const q={blockExplorerUrls:g,chainId:A(e),chainName:(t==null?void 0:t.chainName)??c.name,iconUrls:t==null?void 0:t.iconUrls,nativeCurrency:(t==null?void 0:t.nativeCurrency)??c.nativeCurrency,rpcUrls:U};return await s.request({method:"wallet_addEthereumChain",params:[q]}),c}catch(g){throw new b(g)}throw new I(p)}},onAccountsChanged(t){t.length===0?this.onDisconnect():i.emitter.emit("change",{accounts:t.map(e=>y(e))})},onChainChanged(t){const e=Number(t);i.emitter.emit("change",{chainId:e})},async onDisconnect(t){i.emitter.emit("disconnect");const e=await this.getProvider();r&&(e.removeListener("accountsChanged",r),r=void 0),o&&(e.removeListener("chainChanged",o),o=void 0),n&&(e.removeListener("disconnect",n),n=void 0)}}))}k.type="safe";function k(a={}){const{shimDisconnect:v=!1}=a;let l,d;return L(r=>({id:"safe",name:"Safe",type:k.type,async connect(){var t;const o=await this.getProvider();if(!o)throw new _;const n=await this.getAccounts(),i=await this.getChainId();return d||(d=this.onDisconnect.bind(this),o.on("disconnect",d)),v&&await((t=r.storage)==null?void 0:t.removeItem("safe.disconnected")),{accounts:n,chainId:i}},async disconnect(){var n;const o=await this.getProvider();if(!o)throw new _;d&&(o.removeListener("disconnect",d),d=void 0),v&&await((n=r.storage)==null?void 0:n.setItem("safe.disconnected",!0))},async getAccounts(){const o=await this.getProvider();if(!o)throw new _;return(await o.request({method:"eth_accounts"})).map(y)},async getProvider(){if(typeof window<"u"&&(window==null?void 0:window.parent)!==window){if(!l){const{default:n}=await D(async()=>{const{default:c}=await import("./D7itJ-sI.js");return{default:c}},__vite__mapDeps([9,10,2,3,5]),import.meta.url),i=new n(a),t=await x(()=>i.safe.getInfo(),{timeout:a.unstable_getInfoTimeout??10});if(!t)throw new Error("Could not load Safe information");const e=await(async()=>{const c=await D(()=>import("./Ciblamey.js").then(s=>s.i),__vite__mapDeps([11,2,3,10]),import.meta.url);return typeof c.SafeAppProvider!="function"&&typeof c.default.SafeAppProvider=="function"?c.default.SafeAppProvider:c.SafeAppProvider})();l=new e(t,i)}return l}},async getChainId(){const o=await this.getProvider();if(!o)throw new _;return Number(o.chainId)},async isAuthorized(){var o;try{return v&&await((o=r.storage)==null?void 0:o.getItem("safe.disconnected"))?!1:!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){r.emitter.emit("disconnect")}}))}export{S as coinbaseWallet,T as injected,k as safe};
