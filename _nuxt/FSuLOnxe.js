const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./Dnc54-gI.js","./DE9oX6xH.js","./BWftuhBA.js","./entry.DzCj29gN.css","./BXKHHEn_.js","./pwmWG-VD.js","./BveFN1aX.js","./ChA116uC.js","./B2YPhZ9f.js","./D0wJMidP.js","./BV8s6ez1.js","./zWKok2EV.js"])))=>i.map(i=>d[i]);
import{dz as C,bn as y,aV as I,dA as S,b_ as A,b1 as b,dB as D,dC as _,ci as x}from"./BWftuhBA.js";import{dD as T}from"./BWftuhBA.js";L.type="coinbaseWallet";function L(d={}){return d.version==="3"||d.headlessMode?W(d):N(d)}function N(d){let v,w,l,s;return C(c=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:L.type,async connect({chainId:t,withCapabilities:i,...n}={}){try{const e=await this.getProvider(),o=(await e.request({method:"eth_requestAccounts",params:"instantOnboarding"in n&&n.instantOnboarding?[{onboarding:"instant"}]:[]})).map(a=>y(a));w||(w=this.onAccountsChanged.bind(this),e.on("accountsChanged",w)),l||(l=this.onChainChanged.bind(this),e.on("chainChanged",l)),s||(s=this.onDisconnect.bind(this),e.on("disconnect",s));let r=await this.getChainId();if(t&&r!==t){const a=await this.switchChain({chainId:t}).catch(u=>{if(u.code===b.code)throw u;return{id:r}});r=(a==null?void 0:a.id)??r}return{accounts:i?o.map(a=>({address:a,capabilities:{}})):o,chainId:r}}catch(e){throw/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(e.message)?new b(e):e}},async disconnect(){var i;const t=await this.getProvider();w&&(t.removeListener("accountsChanged",w),w=void 0),l&&(t.removeListener("chainChanged",l),l=void 0),s&&(t.removeListener("disconnect",s),s=void 0),t.disconnect(),(i=t.close)==null||i.call(t)},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(i=>y(i))},async getChainId(){const i=await(await this.getProvider()).request({method:"eth_chainId"});return Number(i)},async getProvider(){if(!v){const t=(()=>{var e;return typeof d.preference=="string"?{options:d.preference}:{...d.preference,options:((e=d.preference)==null?void 0:e.options)??"all"}})(),{createCoinbaseWalletSDK:i}=await D(async()=>{const{createCoinbaseWalletSDK:e}=await import("./Dnc54-gI.js");return{createCoinbaseWalletSDK:e}},__vite__mapDeps([0,1,2,3,4,5,6,7]),import.meta.url);v=i({...d,appChainIds:c.chains.map(e=>e.id),preference:t}).getProvider()}return v},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:t,chainId:i}){var o,r,a,u;const n=c.chains.find(f=>f.id===i);if(!n)throw new I(new S);const e=await this.getProvider();try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:A(n.id)}]}),n}catch(f){if(f.code===4902)try{let h;t!=null&&t.blockExplorerUrls?h=t.blockExplorerUrls:h=(o=n.blockExplorers)!=null&&o.default.url?[(r=n.blockExplorers)==null?void 0:r.default.url]:[];let p;(a=t==null?void 0:t.rpcUrls)!=null&&a.length?p=t.rpcUrls:p=[((u=n.rpcUrls.default)==null?void 0:u.http[0])??""];const g={blockExplorerUrls:h,chainId:A(i),chainName:(t==null?void 0:t.chainName)??n.name,iconUrls:t==null?void 0:t.iconUrls,nativeCurrency:(t==null?void 0:t.nativeCurrency)??n.nativeCurrency,rpcUrls:p};return await e.request({method:"wallet_addEthereumChain",params:[g]}),n}catch(h){throw new b(h)}throw new I(f)}},onAccountsChanged(t){t.length===0?this.onDisconnect():c.emitter.emit("change",{accounts:t.map(i=>y(i))})},onChainChanged(t){const i=Number(t);c.emitter.emit("change",{chainId:i})},async onDisconnect(t){c.emitter.emit("disconnect");const i=await this.getProvider();w&&(i.removeListener("accountsChanged",w),w=void 0),l&&(i.removeListener("chainChanged",l),l=void 0),s&&(i.removeListener("disconnect",s),s=void 0)}}))}function W(d){let w,l,s,c,t;return C(i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:L.type,async connect({chainId:n,withCapabilities:e}={}){try{const o=await this.getProvider(),r=(await o.request({method:"eth_requestAccounts"})).map(u=>y(u));s||(s=this.onAccountsChanged.bind(this),o.on("accountsChanged",s)),c||(c=this.onChainChanged.bind(this),o.on("chainChanged",c)),t||(t=this.onDisconnect.bind(this),o.on("disconnect",t));let a=await this.getChainId();if(n&&a!==n){const u=await this.switchChain({chainId:n}).catch(f=>{if(f.code===b.code)throw f;return{id:a}});a=(u==null?void 0:u.id)??a}return{accounts:e?r.map(u=>({address:u,capabilities:{}})):r,chainId:a}}catch(o){throw/(user closed modal|accounts received is empty|user denied account)/i.test(o.message)?new b(o):o}},async disconnect(){const n=await this.getProvider();s&&(n.removeListener("accountsChanged",s),s=void 0),c&&(n.removeListener("chainChanged",c),c=void 0),t&&(n.removeListener("disconnect",t),t=void 0),n.disconnect(),n.close()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(e=>y(e))},async getChainId(){const e=await(await this.getProvider()).request({method:"eth_chainId"});return Number(e)},async getProvider(){var n;if(!l){const e=await(async()=>{const{default:f}=await D(async()=>{const{default:h}=await import("./B2YPhZ9f.js").then(p=>p.i);return{default:h}},__vite__mapDeps([8,2,3,1]),import.meta.url);return typeof f!="function"&&typeof f.default=="function"?f.default:f})();w=new e({...d,reloadOnDisconnect:!1});const o=(n=w.walletExtension)==null?void 0:n.getChainId(),r=i.chains.find(f=>d.chainId?f.id===d.chainId:f.id===o)||i.chains[0],a=d.chainId||(r==null?void 0:r.id),u=d.jsonRpcUrl||(r==null?void 0:r.rpcUrls.default.http[0]);l=w.makeWeb3Provider(u,a)}return l},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:n,chainId:e}){var a,u,f,h;const o=i.chains.find(p=>p.id===e);if(!o)throw new I(new S);const r=await this.getProvider();try{return await r.request({method:"wallet_switchEthereumChain",params:[{chainId:A(o.id)}]}),o}catch(p){if(p.code===4902)try{let g;n!=null&&n.blockExplorerUrls?g=n.blockExplorerUrls:g=(a=o.blockExplorers)!=null&&a.default.url?[(u=o.blockExplorers)==null?void 0:u.default.url]:[];let U;(f=n==null?void 0:n.rpcUrls)!=null&&f.length?U=n.rpcUrls:U=[((h=o.rpcUrls.default)==null?void 0:h.http[0])??""];const q={blockExplorerUrls:g,chainId:A(e),chainName:(n==null?void 0:n.chainName)??o.name,iconUrls:n==null?void 0:n.iconUrls,nativeCurrency:(n==null?void 0:n.nativeCurrency)??o.nativeCurrency,rpcUrls:U};return await r.request({method:"wallet_addEthereumChain",params:[q]}),o}catch(g){throw new b(g)}throw new I(p)}},onAccountsChanged(n){n.length===0?this.onDisconnect():i.emitter.emit("change",{accounts:n.map(e=>y(e))})},onChainChanged(n){const e=Number(n);i.emitter.emit("change",{chainId:e})},async onDisconnect(n){i.emitter.emit("disconnect");const e=await this.getProvider();s&&(e.removeListener("accountsChanged",s),s=void 0),c&&(e.removeListener("chainChanged",c),c=void 0),t&&(e.removeListener("disconnect",t),t=void 0)}}))}k.type="safe";function k(d={}){const{shimDisconnect:v=!1}=d;let w,l;return C(s=>({id:"safe",name:"Safe",type:k.type,async connect({withCapabilities:c}={}){var e;const t=await this.getProvider();if(!t)throw new _;const i=await this.getAccounts(),n=await this.getChainId();return l||(l=this.onDisconnect.bind(this),t.on("disconnect",l)),v&&await((e=s.storage)==null?void 0:e.removeItem("safe.disconnected")),{accounts:c?i.map(o=>({address:o,capabilities:{}})):i,chainId:n}},async disconnect(){var t;const c=await this.getProvider();if(!c)throw new _;l&&(c.removeListener("disconnect",l),l=void 0),v&&await((t=s.storage)==null?void 0:t.setItem("safe.disconnected",!0))},async getAccounts(){const c=await this.getProvider();if(!c)throw new _;return(await c.request({method:"eth_accounts"})).map(y)},async getProvider(){if(typeof window<"u"&&(window==null?void 0:window.parent)!==window){if(!w){const{default:t}=await D(async()=>{const{default:o}=await import("./D0wJMidP.js");return{default:o}},__vite__mapDeps([9,10,2,3,7]),import.meta.url),i=new t(d),n=await x(()=>i.safe.getInfo(),{timeout:d.unstable_getInfoTimeout??10});if(!n)throw new Error("Could not load Safe information");const e=await(async()=>{const o=await D(()=>import("./zWKok2EV.js").then(r=>r.i),__vite__mapDeps([11,2,3,10]),import.meta.url);return typeof o.SafeAppProvider!="function"&&typeof o.default.SafeAppProvider=="function"?o.default.SafeAppProvider:o.SafeAppProvider})();w=new e(n,i)}return w}},async getChainId(){const c=await this.getProvider();if(!c)throw new _;return Number(c.chainId)},async isAuthorized(){var c;try{return v&&await((c=s.storage)==null?void 0:c.getItem("safe.disconnected"))?!1:!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){s.emitter.emit("disconnect")}}))}export{L as coinbaseWallet,T as injected,k as safe};
